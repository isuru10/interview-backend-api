package com.example.hirdaramani.dto;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Null;
import jakarta.validation.constraints.Pattern;

import java.io.Serializable;

@Data
@AllArgsConstructor
@NoArgsConstructor
public class EmployeeDto implements Serializable {
    @Null(message = "Id will be autogenerated")
    private Integer empId;
    @NotBlank(message = "Id number can't be empty")
    @Pattern(regexp = "^(?:19|20)?\\d{2}(?:[0-35-8]\\d\\d(?<!(?:000|500|36[7-9]|3[7-9]\\d|86[7-9]|8[7-9]\\d)))\\d{4}(?i:v|x)$", message = "Invalid ID number")
    private String idNumber;
    @NotBlank(message = "Contact number can not be empty")
    @Pattern(regexp = "^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$", message = "Invalid contact number")
    private String contactNumber;
    @NotBlank(message = "Address can't be empty")
    @Pattern(regexp = "^[&.0-9a-zA-Z\\s,-]+$", message = "Invalid Address")
    private String address;
    private Boolean ActiveStatus;
}
